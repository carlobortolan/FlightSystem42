plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.24.1'
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

mainClassName = 'eist22t02zweiundvierziger2022.FlightSystem'

group 'com.example'
group 'hello.world'
version = '1.0.0'
sourceCompatibility = '17'
targetCompatibility = '17'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

application {
    mainModule = 'com.example.eist22t02zweiundvierziger2022'
    mainClass = 'com.example.eist22t02zweiundvierziger2022.FlightSystemApplication'
}

javafx {
    version = '18.0.1'
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.media', 'javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.media']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1') {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }

    implementation('org.springframework.boot:spring-boot-starter') {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }

    implementation('com.github.openjson:openjson:1.0.12')

    implementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}



sourceSets {
    main {
        java {
            srcDir 'main'
        }
        resources {
            srcDir 'main'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}


processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

test {
    defaultCharacterEncoding = 'UTF-8'
    useJUnitPlatform()
}
